plan/ideas for blux usage:

blux.rb will be a dsl callable from the command line. This means everything must be done in one single command. Any output needs to be easily parsable by calling programs.
	- maybe replace stdout with stderr for error messages? Need to investigate...

command examples (all work on drafts only for now):
	$ blux -n  (--new)  						    			--> new draft
	$ blux -s (--set)  --title (-t) "bla bla bla" --latest		--> sets title on latest draft
	$ blux -s --title (-t) "bla bla bla" -f draft1.23	--> sets title on draft draft1.23
	$ blux -l (--list)							    			--> lists drafts & attributes
	$ blux -l --with-preview								--> lists drafts, attrs, & preview
	$ blux -c (--convert) html --latest						--> outputs html for latest draft
	$ blux -c html --file -f draft1.23					--> outputs html for draft draft1.23
	$ blux -g (--get) --title (-t) --latest						--> gets title on latest draft
	$ blux -g --title (-t) -f draft1.23					--> gets title on draft draft1.23
	$ blux -e (--edit) --title (-t) "title 1"
	$ blux -e --latest

publishing commands should look like this:
	$ blux -p (--publish) --latest
	$ blux -p -f draft1.23

after which the draft will be renamed to postxxx and a new list of commands should exist to manage published posts.

eventually, blux should manage timed publishing.
